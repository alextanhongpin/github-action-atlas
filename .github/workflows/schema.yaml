# This is a basic workflow to help you get started with Actions

name: Manage schema

# Controls when the workflow will run
on:
  pull_request:
    types: [ labeled ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "add-comment"
  diff-schema:
    if: ${{ github.event.label.name == 'diff-schema' }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:15.1-alpine
        # Provide the password for postgres
        env:
          POSTGRES_DB: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Run a one-line script
        run: echo Hello, world!

      - name: Create tmp database
        run: |
          psql -h postgres -U postgres -c 'CREATE USER tmp'
          psql -h postgres -U postgres -c 'CREATE DATABASE tmp'
          psql -h postgres -U postgres -c 'GRANT ALL PRIVILEGES ON DATABASE tmp TO tmp'
        env:
          PGPASSWORD=postgres

      - name: Checkout main
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Apply initial migration
        run: make atlas-migrate
        env:
          DB_NAME: test
          DB_HOST: localhost
          DB_PORT: ${{ job.services.postgres.ports[5432] }}
          DB_USER: postgres
          DB_PASSS: postgres

      - name: Checkout current branch
        uses: actions/checkout@v3

      - name: Setup latest go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          check-latest: true

      - name: Install atlas
        run: go install ariga.io/atlas/cmd/atlas@latest


      - name: Check for diff in schema between main branch and current branch
        # We continue even if error code 1 is returned.
        # See here to do contional workflow based on the previous step success/failure.
        #https://stackoverflow.com/questions/69182773/how-to-exclude-an-exit-code-in-github-actions-workflow-result-status
        #continue-on-error: true
        run: make atlas-diff

      - name: Create comment
        uses: thollander/actions-comment-pull-request@v2
        with:
          filePath: ${{ github.workspace }}/diff.sql
          reactions: rocket
